class GeoJSONMapViewer{constructor(){this.map=null,this.loadedLayers=new Set,this.layerData=new Map,this.layerTypes=new Map,this.activeLayerFilters=new Map,this.checkinData=this.loadShubyoData(),this.init()}init(){this.initMap(),this.initUI(),this.initSidebarToggle(),setTimeout(()=>{document.body.classList.remove("preload")},100)}initSidebarToggle(){const e=document.getElementById("sidebar"),t=document.getElementById("toggle-sidebar"),n=document.getElementById("mobile-toggle");window.innerWidth>768?(e.classList.remove("collapsed"),n.classList.add("hidden")):(e.classList.add("collapsed"),n.classList.remove("hidden")),t.addEventListener("click",()=>{e.classList.add("collapsed"),n.classList.remove("hidden")}),n.addEventListener("click",()=>{e.classList.remove("collapsed"),n.classList.add("hidden")}),window.addEventListener("resize",()=>{window.innerWidth>768?(e.classList.remove("collapsed"),n.classList.add("hidden")):e.classList.contains("collapsed")?n.classList.remove("hidden"):n.classList.add("hidden")}),document.getElementById("map").addEventListener("click",()=>{window.innerWidth<=768&&(e.classList.add("collapsed"),n.classList.remove("hidden"))})}initMap(){const e=this.loadMapState();this.map=new maplibregl.Map({container:"map",style:MAP_CONFIG.style,center:e.center||MAP_CONFIG.center,zoom:e.zoom||MAP_CONFIG.zoom,minZoom:MAP_CONFIG.minZoom,maxZoom:MAP_CONFIG.maxZoom}),this.map.addControl(new maplibregl.NavigationControl,"bottom-right"),this.map.addControl(new maplibregl.ScaleControl,"bottom-left"),this.map.addControl(new maplibregl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},fitBoundsOptions:{maxZoom:15},trackUserLocation:!0,showUserLocation:!0}),"bottom-right"),this.map.on("load",()=>{console.log("Map loaded successfully"),this.loadInitialLayers()}),this.map.on("moveend",()=>{this.saveMapState()}),this.map.on("zoomend",()=>{this.saveMapState()})}async initUI(){const e=document.getElementById("layer-controls"),t=this.loadLayerStates();for(const n of LAYER_CONFIG){await this.loadLayerMetadata(n),t[n.id]&&(n.visible=t[n.id].visible);const a=this.createLayerControl(n);e.appendChild(a)}this.createDataManagementButtons(e)}async loadLayerMetadata(e){if(!e.name||!e.description)try{const t=await fetch(e.source);if(!t.ok)throw new Error(`Failed to load metadata from ${e.source}: ${t.status}`);const n=await t.json();n.metadata?(e.name=n.metadata.name||`レイヤー ${e.id}`,e.description=n.metadata.description||"GeoJSONデータ",e.category=n.metadata.category,e.updated=n.metadata.updated):(e.name=`レイヤー ${e.id}`,e.description="GeoJSONデータ")}catch(t){console.error(`Error loading metadata for layer ${e.id}:`,t),e.name=`レイヤー ${e.id}`,e.description="読み込みエラー"}}createLayerControl(e){const t=document.createElement("div");t.className="layer-control",t.id=`control-${e.id}`;const n=document.createElement("div");n.className=`layer-style-indicator ${e.geometryType.toLowerCase()}`,n.style.backgroundColor=this.getLayerColor(e);const a=document.createElement("input");a.type="checkbox",a.id=`layer-${e.id}`,a.checked=e.visible,a.addEventListener("change",t=>{this.toggleLayer(e.id,t.target.checked)});const o=document.createElement("div");o.className="layer-title",o.appendChild(a),o.appendChild(n),o.appendChild(document.createTextNode(e.name));const s=document.createElement("div");s.className="layer-actions";const i=document.createElement("button");i.className="info-button",i.textContent="i",i.title="レイヤー情報を表示",i.addEventListener("click",t=>{t.stopPropagation(),this.toggleLayerMetadata(e.id)}),s.appendChild(i);const r=document.createElement("button");r.className="filter-button",r.id=`filter-btn-${e.id}`,r.textContent="▼",r.title="フィルターを表示/非表示",r.addEventListener("click",t=>{t.stopPropagation(),this.toggleLayerFilters(e.id)}),s.appendChild(r);const d=document.createElement("div");d.className="layer-header",d.appendChild(o),d.appendChild(s),d.addEventListener("click",t=>{"BUTTON"!==t.target.tagName&&"INPUT"!==t.target.tagName&&(a.checked=!a.checked,this.toggleLayer(e.id,a.checked))});const c=document.createElement("div");c.className="layer-description",c.textContent=e.description;const l=document.createElement("div");l.className="layer-metadata",l.id=`metadata-${e.id}`;const p=document.createElement("div");return p.className="layer-filters",p.id=`filters-${e.id}`,t.appendChild(d),t.appendChild(c),t.appendChild(l),t.appendChild(p),t}toggleLayerMetadata(e){const t=document.getElementById(`metadata-${e}`);t.classList.contains("visible")?t.classList.remove("visible"):(t.classList.add("visible"),""===t.innerHTML&&this.createLayerMetadata(e))}createLayerMetadata(e){const t=document.getElementById(`metadata-${e}`);if(!t)return;const n=this.layerData.get(e),a=LAYER_CONFIG.find(t=>t.id===e);if(!n||!a)return;const o=document.createElement("div"),s=(e,t)=>{if(t){const n=document.createElement("div");n.className="metadata-item";const a=document.createElement("span");a.className="metadata-label",a.textContent=e+":";const s=document.createElement("span");s.className="metadata-value",s.textContent=t,n.appendChild(a),n.appendChild(s),o.appendChild(n)}},i=n.metadata||{};Object.keys(i).forEach(e=>{"name"!==e&&"description"!==e&&s(e,i[e])});const r=n.features?n.features.length:0;s("features",`${r}`),t.appendChild(o)}toggleLayerFilters(e){const t=document.getElementById(`control-${e}`),n=document.getElementById(`filters-${e}`),a=document.getElementById(`filter-btn-${e}`);n.classList.contains("visible")?(n.classList.remove("visible"),t.classList.remove("expanded"),a.classList.remove("active")):(n.classList.add("visible"),t.classList.add("expanded"),a.classList.add("active"),!this.layerTypes.has(e)&&this.loadedLayers.has(e)&&this.createLayerFilters(e))}createLayerFilters(e){const t=document.getElementById(`filters-${e}`);if(!t||this.layerTypes.has(e))return;const n=this.layerData.get(e);if(!n)return;const a=new Set;n.features&&n.features.forEach(e=>{e.properties&&e.properties.type&&a.add(e.properties.type)}),this.layerTypes.set(e,a);const o=this.loadLayerStates(),s=o[e]?.activeFilters||[];if(this.activeLayerFilters.set(e,new Set(s)),0===a.size)return void(t.innerHTML='<p style="font-size: 0.8em; color: #999; margin: 0;">フィルター可能なタイプがありません</p>');const i=document.createElement("h4");i.textContent="タイプフィルター:";const r=document.createElement("div");r.className="layer-filter-controls",a.forEach(t=>{const n=document.createElement("div");n.className="layer-filter-tag",n.textContent=t,s.includes(t)&&n.classList.add("active"),n.addEventListener("click",()=>{this.toggleLayerTypeFilter(e,t,n)}),r.appendChild(n)});const d=document.createElement("button");d.className="layer-clear-filters",d.textContent="クリア",d.addEventListener("click",()=>{this.clearLayerFilters(e)}),t.appendChild(i),t.appendChild(r),t.appendChild(d),this.updateLayerFilter(e)}toggleLayerTypeFilter(e,t,n){const a=this.activeLayerFilters.get(e);a.has(t)?(a.delete(t),n.classList.remove("active")):(a.add(t),n.classList.add("active")),this.updateLayerFilter(e),this.saveLayerStates()}clearLayerFilters(e){this.activeLayerFilters.get(e).clear();const t=document.querySelector(`#filters-${e} .layer-filter-controls`);t&&t.querySelectorAll(".layer-filter-tag").forEach(e=>{e.classList.remove("active")}),this.updateLayerFilter(e),this.saveLayerStates()}getLayerColor(e){if(e.style.paint){const t=e.style.paint["circle-color"]||e.style.paint["line-color"]||e.style.paint["fill-color"];if(t)return t}const t=e.id,n=this.layerData.get(t);return n?.metadata?.color?n.metadata.color:"#000000"}getDarkerColor(e){if(e.startsWith("#")){const t=e.slice(1),n=parseInt(t,16);return`#${(Math.max(0,(n>>16)-40)<<16|Math.max(0,(n>>8&255)-40)<<8|Math.max(0,(255&n)-40)).toString(16).padStart(6,"0")}`}return e}async loadInitialLayers(){for(const e of LAYER_CONFIG)e.visible&&(await this.loadLayer(e),this.showLayer(e.id))}async loadLayer(e){if(!this.loadedLayers.has(e.id))try{const t=await fetch(e.source);if(!t.ok)throw new Error(`Failed to load ${e.source}: ${t.status}`);const n=await t.json();this.adjustOverlappingPoints(n),this.layerData.set(e.id,n),this.map.addSource(e.id,{type:"geojson",data:n}),this.map.addLayer({id:e.id,type:e.style.type,source:e.id,paint:e.style.paint,layout:e.style.layout||{}}),this.updateShubyoStyle(e.id,n.metadata),this.addPopupToLayer(e,n.metadata),this.loadedLayers.add(e.id),console.log(`Layer ${e.id} loaded successfully`)}catch(t){console.error(`Error loading layer ${e.id}:`,t),this.showErrorMessage(`レイヤー "${e.name}" の読み込みに失敗しました: ${t.message}`)}}updateLayerFilter(e){const t=this.activeLayerFilters.get(e);if(t&&0!==t.size){const n=["in",["get","type"],["literal",Array.from(t)]];this.map.setFilter(e,n)}else this.map.setFilter(e,null)}adjustOverlappingPoints(e){if(!e.features||0===e.features.length)return;const t=new Map;e.features.forEach((e,n)=>{if(e.geometry&&"Point"===e.geometry.type){const a=e.geometry.coordinates,o=`${a[0]},${a[1]}`;t.has(o)||t.set(o,[]),t.get(o).push({feature:e,originalIndex:n})}}),t.forEach((e,t)=>{if(e.length>1){const[t,n]=e[0].feature.geometry.coordinates,a=1e-4,o=2*Math.PI/e.length;e.forEach((e,s)=>{if(0===s)return;const i=o*s,r=t+a*Math.cos(i),d=n+a*Math.sin(i);e.feature.geometry.coordinates=[r,d]})}})}createDataManagementButtons(e){const t=document.createElement("div");t.className="data-management",t.style.cssText="\n            margin-top: 20px;\n            padding: 15px;\n            background: #f8f9fa;\n            border-radius: 8px;\n            border: 1px solid #e9ecef;\n        ";const n=document.createElement("h4");n.textContent="収鋲データ管理",n.style.cssText="\n            margin: 0 0 12px 0;\n            font-size: 14px;\n            color: #495057;\n            font-weight: 600;\n        ",t.appendChild(n);const a=document.createElement("div");a.style.cssText="\n            display: flex;\n            gap: 8px;\n            flex-direction: column;\n        ";const o=document.createElement("button");o.textContent="📤 エクスポート",o.className="export-button",o.style.cssText="\n            background: linear-gradient(135deg, #28a745, #20c997);\n            color: white;\n            border: none;\n            padding: 8px 12px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 12px;\n            font-weight: 600;\n            transition: all 0.3s ease;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 4px;\n        ",o.addEventListener("click",()=>this.exportShubyoData()),o.addEventListener("mouseover",()=>{o.style.transform="translateY(-1px)",o.style.boxShadow="0 2px 8px rgba(40, 167, 69, 0.3)"}),o.addEventListener("mouseout",()=>{o.style.transform="translateY(0)",o.style.boxShadow="none"});const s=document.createElement("button");s.textContent="📥 インポート",s.className="import-button",s.style.cssText="\n            background: linear-gradient(135deg, #007bff, #6f42c1);\n            color: white;\n            border: none;\n            padding: 8px 12px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 12px;\n            font-weight: 600;\n            transition: all 0.3s ease;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 4px;\n        ",s.addEventListener("click",()=>this.importShubyoData()),s.addEventListener("mouseover",()=>{s.style.transform="translateY(-1px)",s.style.boxShadow="0 2px 8px rgba(0, 123, 255, 0.3)"}),s.addEventListener("mouseout",()=>{s.style.transform="translateY(0)",s.style.boxShadow="none"});const i=document.createElement("button");i.textContent="🗑️ 全削除",i.className="clear-button",i.style.cssText="\n            background: linear-gradient(135deg, #dc3545, #c82333);\n            color: white;\n            border: none;\n            padding: 8px 12px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 12px;\n            font-weight: 600;\n            transition: all 0.3s ease;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 4px;\n        ",i.addEventListener("click",()=>this.clearAllShubyoData()),i.addEventListener("mouseover",()=>{i.style.transform="translateY(-1px)",i.style.boxShadow="0 2px 8px rgba(220, 53, 69, 0.3)"}),i.addEventListener("mouseout",()=>{i.style.transform="translateY(0)",i.style.boxShadow="none"}),a.appendChild(o),a.appendChild(s),a.appendChild(i),t.appendChild(a),e.appendChild(t)}addPopupToLayer(e,t){this.map.on("click",e.id,n=>{const a=n.features;if(a.length>0){const o=a[0],s=o.properties,i=s.id,r=s.name,d=t?.id;let c=!1;if(d){c=this.getShubyoHistory(d,i).length>0}const l=this.getLayerColor(e),p=this.layerData.get(e.id),h=p?.metadata?.defaultIcon||"📍";let m=`\n                    <div class="custom-popup">\n                        \x3c!-- ヘッダー部分 --\x3e\n                        <div class="popup-header">\n                            <div class="popup-header-content">\n                                <div class="popup-icon" style="background: linear-gradient(135deg, ${l}, ${this.getDarkerColor(l)});">\n                                    ${s.icon||h}\n                                </div>\n                                <div class="popup-info">\n                                    <h3 class="popup-title">${r}</h3>\n                                    <div class="popup-subtitle">${e.name}</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        \x3c!-- コンテンツ部分 --\x3e\n                        <div class="popup-content">\n                `;const u=Object.entries(s).filter(([e,t])=>"id"!==e&&"name"!==e&&"icon"!==e&&t&&""!==t.toString().trim());u.length>0&&(m+='<table class="popup-properties-table">',u.forEach(([e,t])=>{m+=`\n                            <tr>\n                                <td>${e}</td>\n                                <td>${t}</td>\n                            </tr>\n                        `}),m+="</table>"),c&&(m+='\n                        <div class="popup-status">\n                            <span class="popup-status-icon">✅</span>\n                            <div class="popup-status-text">収鋲済み</div>\n                        </div>\n                    '),m+='\n                            <div class="popup-buttons">\n                ';const y=o.geometry.coordinates,g=`https://www.google.com/maps/search/?api=1&query=${y[1]},${y[0]}`;m+=`\n                    <button onclick="window.open('${g}', '_blank');" class="popup-btn popup-btn-google">\n                        <span class="popup-btn-icon">🗺️</span>\n                        Googleマップで開く\n                    </button>\n                `,m+=c?`\n                        <button onclick="window.mapViewer.removeShubyoFromLocation('${d}', '${i}', '${r.replace(/'/g,"\\'")}'); document.querySelector('.maplibregl-popup').remove();" class="popup-btn popup-btn-remove">\n                            <span class="popup-btn-icon">🗑️</span>\n                            収鋲解除\n                        </button>\n                    `:`\n                        <button onclick="window.mapViewer.shubyoToLocation('${d}', '${i}', '${r.replace(/'/g,"\\'")}'); document.querySelector('.maplibregl-popup').remove();" class="popup-btn popup-btn-add">\n                            <span class="popup-btn-icon">📍</span>\n                            収鋲する\n                        </button>\n                    `,m+="\n                            </div>\n                        </div>\n                    </div>\n                ";new maplibregl.Popup({maxWidth:"280px",className:"rich-popup"}).setLngLat(n.lngLat).setHTML(m).addTo(this.map)}}),this.map.on("mouseenter",e.id,()=>{this.map.getCanvas().style.cursor="pointer"}),this.map.on("mouseleave",e.id,()=>{this.map.getCanvas().style.cursor=""})}async toggleLayer(e,t){const n=LAYER_CONFIG.find(t=>t.id===e);n&&(n.visible=t,t?(this.loadedLayers.has(e)||await this.loadLayer(n),this.showLayer(e)):this.hideLayer(e),this.saveLayerStates())}showLayer(e){if(this.map.getLayer(e)){this.map.setLayoutProperty(e,"visibility","visible"),this.updateLayerFilter(e);const t=this.layerData.get(e);t?.metadata&&this.updateShubyoStyle(e,t.metadata)}}hideLayer(e){this.map.getLayer(e)&&this.map.setLayoutProperty(e,"visibility","none")}loadLayerStates(){const e=localStorage.getItem("shubyo-layer-states");if(e)try{return JSON.parse(e)}catch(e){return console.error("Error parsing saved layer states:",e),{}}return{}}saveLayerStates(){const e={};LAYER_CONFIG.forEach(t=>{e[t.id]={visible:t.visible,activeFilters:Array.from(this.activeLayerFilters.get(t.id)||[])}}),localStorage.setItem("shubyo-layer-states",JSON.stringify(e))}showErrorMessage(e){const t=document.createElement("div");t.style.cssText="\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            left: 80px;\n            background: #ff6b6b;\n            color: white;\n            padding: 10px 15px;\n            border-radius: 5px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n            z-index: 1000;\n            max-width: 300px;\n        ",t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.remove()},5e3)}async addNewLayer(e){LAYER_CONFIG.push(e);const t=this.createLayerControl(e);document.getElementById("layer-controls").appendChild(t),e.visible&&(await this.loadLayer(e),this.showLayer(e.id))}removeLayer(e){this.map.getLayer(e)&&this.map.removeLayer(e),this.map.getSource(e)&&this.map.removeSource(e),this.loadedLayers.delete(e);const t=document.getElementById(`layer-${e}`);t&&t.parentElement&&t.parentElement.remove();const n=LAYER_CONFIG.findIndex(t=>t.id===e);n>-1&&LAYER_CONFIG.splice(n,1)}loadShubyoData(){const e=localStorage.getItem("shubyo-data");return e?JSON.parse(e):{}}saveShubyoData(){localStorage.setItem("shubyo-data",JSON.stringify(this.checkinData))}loadMapState(){const e=localStorage.getItem("shubyo-map-state");if(e)try{return JSON.parse(e)}catch(e){return console.error("Error parsing saved map state:",e),{}}return{}}saveMapState(){if(!this.map)return;const e={center:this.map.getCenter(),zoom:this.map.getZoom(),bearing:this.map.getBearing(),pitch:this.map.getPitch(),timestamp:Date.now()};localStorage.setItem("shubyo-map-state",JSON.stringify(e))}shubyoToLocation(e,t,n){if(!e||"undefined"===e)return console.error("Invalid layerId (metadata.id):",e),void this.showSuccessMessage("収鋲に失敗しました：レイヤーIDが無効です");if(!t||""===t||"undefined"===t)return console.error("Invalid featureId:",t),void this.showSuccessMessage("収鋲に失敗しました：フィーチャーIDが無効です");this.checkinData[e]||(this.checkinData[e]=[]);const a=String(t);this.checkinData[e].includes(a)||this.checkinData[e].push(a),this.saveShubyoData(),this.showSuccessMessage(`${n}を収鋲しました！`),this.updateAllShubyoStyles()}removeShubyoFromLocation(e,t,n){if(!e||"undefined"===e)return console.error("Invalid layerId (metadata.id):",e),void this.showSuccessMessage("収鋲解除に失敗しました：レイヤーIDが無効です");if(!t||""===t||"undefined"===t)return console.error("Invalid featureId:",t),void this.showSuccessMessage("収鋲解除に失敗しました：フィーチャーIDが無効です");if(!this.checkinData[e])return void this.showSuccessMessage(`${n}は収鋲されていません`);const a=String(t),o=this.checkinData[e].indexOf(a);o>-1?(this.checkinData[e].splice(o,1),this.saveShubyoData(),this.showSuccessMessage(`${n}の収鋲を解除しました！`),this.updateAllShubyoStyles()):this.showSuccessMessage(`${n}は収鋲されていません`)}updateAllShubyoStyles(){for(const e of this.loadedLayers){const t=this.layerData.get(e);t?.metadata&&this.updateShubyoStyle(e,t.metadata)}}updateShubyoStyle(e,t){if(!this.map.getLayer(e)||!t?.id)return;const n=this.checkinData[t.id]||[];if(n.length>0){const t=n.map(e=>String(e)),a=["case",["in",["to-string",["get","id"]],["literal",t]],"#ff6b6b","rgba(255, 255, 255, 0.8)"],o=["case",["in",["to-string",["get","id"]],["literal",t]],2.5,1.5];this.map.setPaintProperty(e,"circle-stroke-color",a),this.map.setPaintProperty(e,"circle-stroke-width",o),this.map.setPaintProperty(e,"circle-opacity",.9),this.map.setPaintProperty(e,"circle-stroke-opacity",.8)}else this.map.setPaintProperty(e,"circle-stroke-color","rgba(255, 255, 255, 0.8)"),this.map.setPaintProperty(e,"circle-stroke-width",1.5),this.map.setPaintProperty(e,"circle-opacity",.9),this.map.setPaintProperty(e,"circle-stroke-opacity",.8)}getShubyoHistory(e,t){const n=this.checkinData[e]||[],a=String(t);return n.includes(a)?[{status:"shubyo"}]:[]}showSuccessMessage(e){const t=document.createElement("div");t.style.cssText="\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            left: 80px;\n            background: #28a745;\n            color: white;\n            padding: 10px 15px;\n            border-radius: 5px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n            z-index: 1000;\n            max-width: 300px;\n        ",t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.remove()},3e3)}exportShubyoData(){try{const e={version:"1.0",exportDate:(new Date).toISOString(),shubyoData:this.checkinData,totalPoints:Object.values(this.checkinData).reduce((e,t)=>e+t.length,0)},t=JSON.stringify(e,null,2);this.showTextExportModal(t,e.totalPoints)}catch(e){console.error("Export error:",e),this.showErrorMessage("エクスポートに失敗しました")}}showTextExportModal(e,t){const n=document.createElement("div");n.style.cssText="\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.5);\n            z-index: 10000;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 20px;\n            box-sizing: border-box;\n        ";const a=document.createElement("div");a.style.cssText="\n            background: white;\n            border-radius: 12px;\n            padding: 20px;\n            max-width: 500px;\n            width: 100%;\n            max-height: 80vh;\n            overflow: hidden;\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n            display: flex;\n            flex-direction: column;\n        ";const o=document.createElement("div");o.style.cssText="\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 15px;\n            padding-bottom: 10px;\n            border-bottom: 1px solid #e9ecef;\n        ";const s=document.createElement("h3");s.textContent=`収鋲データエクスポート (${t}ポイント)`,s.style.cssText="\n            margin: 0;\n            color: #495057;\n            font-size: 16px;\n        ";const i=document.createElement("button");i.textContent="×",i.style.cssText="\n            background: none;\n            border: none;\n            font-size: 20px;\n            cursor: pointer;\n            color: #6c757d;\n            padding: 0;\n            width: 30px;\n            height: 30px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        ",i.addEventListener("click",()=>document.body.removeChild(n)),o.appendChild(s),o.appendChild(i);const r=document.createElement("p");r.textContent="このテキストをコピーして保存してください。インポート時に使用できます。",r.style.cssText="\n            margin: 0 0 15px 0;\n            color: #6c757d;\n            font-size: 14px;\n        ";const d=document.createElement("textarea");d.value=e,d.readOnly=!0,d.style.cssText="\n            width: 100%;\n            height: 300px;\n            border: 1px solid #ced4da;\n            border-radius: 6px;\n            padding: 10px;\n            font-family: 'Courier New', monospace;\n            font-size: 12px;\n            resize: none;\n            background: #f8f9fa;\n            box-sizing: border-box;\n        ";const c=document.createElement("div");c.style.cssText="\n            display: flex;\n            gap: 10px;\n            margin-top: 15px;\n        ";const l=document.createElement("button");l.textContent="📋 クリップボードにコピー",l.style.cssText="\n            flex: 1;\n            background: linear-gradient(135deg, #28a745, #20c997);\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 600;\n        ",l.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(e),l.textContent="✅ コピー完了",setTimeout(()=>{l.textContent="📋 クリップボードにコピー"},2e3)}catch(e){d.select(),document.execCommand("copy"),l.textContent="✅ コピー完了",setTimeout(()=>{l.textContent="📋 クリップボードにコピー"},2e3)}});const p=document.createElement("button");p.textContent="💾 ファイルダウンロード",p.style.cssText="\n            background: linear-gradient(135deg, #007bff, #6f42c1);\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 600;\n        ",p.addEventListener("click",()=>{const t=new Blob([e],{type:"application/json"}),n=document.createElement("a");n.href=URL.createObjectURL(t),n.download=`shubyo-data-${(new Date).toISOString().split("T")[0]}.json`,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(n.href)}),c.appendChild(l),c.appendChild(p),a.appendChild(o),a.appendChild(r),a.appendChild(d),a.appendChild(c),n.appendChild(a);const h=e=>{"Escape"===e.key&&(document.body.removeChild(n),document.removeEventListener("keydown",h))};document.addEventListener("keydown",h),n.addEventListener("click",e=>{e.target===n&&(document.body.removeChild(n),document.removeEventListener("keydown",h))}),document.body.appendChild(n),setTimeout(()=>d.select(),100)}importShubyoData(){this.showImportModal()}showImportModal(){const e=document.createElement("div");e.style.cssText="\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.5);\n            z-index: 10000;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 20px;\n            box-sizing: border-box;\n        ";const t=document.createElement("div");t.style.cssText="\n            background: white;\n            border-radius: 12px;\n            padding: 20px;\n            max-width: 500px;\n            width: 100%;\n            max-height: 80vh;\n            overflow: hidden;\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n            display: flex;\n            flex-direction: column;\n        ";const n=document.createElement("div");n.style.cssText="\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 15px;\n            padding-bottom: 10px;\n            border-bottom: 1px solid #e9ecef;\n        ";const a=document.createElement("h3");a.textContent="収鋲データインポート",a.style.cssText="\n            margin: 0;\n            color: #495057;\n            font-size: 16px;\n        ";const o=document.createElement("button");o.textContent="×",o.style.cssText="\n            background: none;\n            border: none;\n            font-size: 20px;\n            cursor: pointer;\n            color: #6c757d;\n            padding: 0;\n            width: 30px;\n            height: 30px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        ",o.addEventListener("click",()=>document.body.removeChild(e)),n.appendChild(a),n.appendChild(o);const s=document.createElement("p");s.textContent="エクスポートしたデータをテキストで貼り付けるか、ファイルを選択してください。",s.style.cssText="\n            margin: 0 0 15px 0;\n            color: #6c757d;\n            font-size: 14px;\n        ";const i=document.createElement("textarea");i.placeholder="エクスポートしたJSONデータをここに貼り付けてください...",i.style.cssText="\n            width: 100%;\n            height: 200px;\n            border: 1px solid #ced4da;\n            border-radius: 6px;\n            padding: 10px;\n            font-family: 'Courier New', monospace;\n            font-size: 12px;\n            resize: none;\n            box-sizing: border-box;\n            margin-bottom: 15px;\n        ";const r=document.createElement("button");r.textContent="📁 ファイルを選択",r.style.cssText="\n            background: linear-gradient(135deg, #6c757d, #495057);\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 600;\n            margin-bottom: 15px;\n            width: 100%;\n        ",r.addEventListener("click",()=>{const e=document.createElement("input");e.type="file",e.accept=".json",e.onchange=e=>{const t=e.target.files[0];if(!t)return;const n=new FileReader;n.onload=e=>{i.value=e.target.result},n.readAsText(t)},e.click()});const d=document.createElement("div");d.style.cssText="\n            display: flex;\n            gap: 10px;\n        ";const c=document.createElement("button");c.textContent="📥 インポート実行",c.style.cssText="\n            flex: 1;\n            background: linear-gradient(135deg, #007bff, #6f42c1);\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 600;\n        ",c.addEventListener("click",()=>{this.processImportData(i.value),document.body.removeChild(e)});const l=document.createElement("button");l.textContent="キャンセル",l.style.cssText="\n            background: #6c757d;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 600;\n        ",l.addEventListener("click",()=>document.body.removeChild(e)),d.appendChild(c),d.appendChild(l),t.appendChild(n),t.appendChild(s),t.appendChild(i),t.appendChild(r),t.appendChild(d),e.appendChild(t);const p=t=>{"Escape"===t.key&&(document.body.removeChild(e),document.removeEventListener("keydown",p))};document.addEventListener("keydown",p),e.addEventListener("click",t=>{t.target===e&&(document.body.removeChild(e),document.removeEventListener("keydown",p))}),document.body.appendChild(e)}processImportData(e){if(e.trim())try{const t=JSON.parse(e);if(!t.shubyoData||"object"!=typeof t.shubyoData)throw new Error("無効なデータ形式です");const n=Object.values(this.checkinData).reduce((e,t)=>e+t.length,0),a=Object.values(t.shubyoData).reduce((e,t)=>e+t.length,0),o=`現在の収鋲データ（${n}ポイント）を、インポートデータ（${a}ポイント）で置き換えますか？\n\n※この操作は元に戻せません。`;confirm(o)&&(this.checkinData=t.shubyoData,this.saveShubyoData(),this.updateAllShubyoStyles(),this.showSuccessMessage(`収鋲データをインポートしました（${a}ポイント）`))}catch(e){console.error("Import error:",e),this.showErrorMessage("インポートに失敗しました: "+e.message)}else this.showErrorMessage("データが入力されていません")}clearAllShubyoData(){const e=Object.values(this.checkinData).reduce((e,t)=>e+t.length,0);if(0===e)return void this.showSuccessMessage("削除する収鋲データがありません");confirm(`すべての収鋲データ（${e}ポイント）を削除しますか？\n\n※この操作は元に戻せません。`)&&(this.checkinData={},this.saveShubyoData(),this.updateAllShubyoStyles(),this.showSuccessMessage(`すべての収鋲データを削除しました（${e}ポイント）`))}}document.addEventListener("DOMContentLoaded",()=>{window.mapViewer=new GeoJSONMapViewer});