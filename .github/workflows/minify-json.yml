name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Copy all necessary files into deploy/
        run: |
          mkdir -p deploy
          # Copy all files from the root to deploy (excluding workflows, etc.)
          rsync -av --exclude='deploy/' --exclude='.github/' --exclude='.git/' --exclude='.gitignore' --exclude='README.md' --exclude='_config.yml' ./ ./deploy/

      - name: Round coordinates and minify .geojson files in deploy/
        run: |
          find deploy -name '*.geojson' | while read file; do
            jq 'def r: if type=="array" then map(r) elif type=="object" then with_entries(.value |= r) elif type=="number" then (.*100000|round)/100000 else . end;
                . as $in
                | if has("features") then
                    .features |= map(
                      if has("geometry") and .geometry.coordinates then
                        .geometry.coordinates |= (r)
                      else . end
                    )
                  elif has("geometry") and .geometry.coordinates then
                    .geometry.coordinates |= (r)
                  else . end' "$file" | jq -c . > tmp.geojson && mv tmp.geojson "$file"
          done

      - name: Minify all .json files in deploy/
        run: |
          find deploy -name '*.json' ! -name '*.geojson' | while read file; do
            jq -c . "$file" > tmp.json && mv tmp.json "$file"
          done

      - name: Minify all .js files in deploy/
        run: |
          npm install -g terser
          find deploy -name '*.js' | while read file; do
            terser "$file" -c -m -o "$file.min"
            if ! cmp -s "$file" "$file.min"; then
              mv "$file.min" "$file"
              echo "Minified and updated: $file"
            else
              rm "$file.min"
              echo "No change: $file"
            fi
          done

      - name: Minify all .css files in deploy/
        run: |
          npm install -g esbuild
          find deploy -name '*.css' | while read file; do
            esbuild "$file" --minify --outfile="$file.min"
            if ! cmp -s "$file" "$file.min"; then
              mv "$file.min" "$file"
              echo "Minified and updated: $file"
            else
              rm "$file.min"
              echo "No change: $file"
            fi
          done

      - name: Generate sitemap.xml in deploy/
        run: |
          BASE_URL="https://shubyo.yy-kuso.com"
          echo '<?xml version="1.0" encoding="UTF-8"?>' > deploy/sitemap.xml
          echo '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">' >> deploy/sitemap.xml
          find deploy -name "*.html" | while read filepath; do
            relative_path="${filepath#deploy/}"
            if [[ "$relative_path" == */index.html ]]; then
              url_path="${relative_path%index.html}"
            else
              url_path="$relative_path"
            fi
            mod_time=$(date -u -r "$filepath" +"%Y-%m-%dT%H:%M:%SZ")
            echo "  <url>" >> deploy/sitemap.xml
            echo "    <loc>${BASE_URL}/${url_path}</loc>" >> deploy/sitemap.xml
            echo "    <lastmod>${mod_time}</lastmod>" >> deploy/sitemap.xml
            echo "  </url>" >> deploy/sitemap.xml
          done
          echo '</urlset>' >> deploy/sitemap.xml

      - name: Generate robots.txt in deploy/
        run: |
          BASE_URL="https://shubyo.yy-kuso.com"
          echo "User-agent: *" > deploy/robots.txt
          echo "Allow: /" >> deploy/robots.txt
          echo "" >> deploy/robots.txt
          echo "Sitemap: ${BASE_URL}/sitemap.xml" >> deploy/robots.txt

      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
          publish_branch: gh-pages
          force_orphan: true
